#! /usr/bin/env node
const program = require("commander");
const chalk = require("chalk");

console.log(`hello ${chalk.blue("world")}`);


program
.name("lx-cli")
.usage(`<command> [option]`)

// package.json 中存取了项目的版本号 version
program.version(`zc-cli ${require("../package.json").version}`);

// 添加 create 命令
program
  .command("create <project-name>") // 增加创建指令
  .description("create a new project") // 添加描述信息
  .option("-f, --force", "overwrite target directory if it exists") // 强制覆盖
  .action((projectName, cmd) => {
    // 引入 create 模块 ， 并传入参数
    require("../lib/create")(projectName, cmd);
  });

// 添加 config 命令
program
  .command("config [value]") // config 命令
  .description("inspect and modify the config")
  .option("-g, --get <key>", "get value by key")
  .option("-s, --set <key> <value>", "set option[key] is value")
  .option("-d, --delete <key>", "delete option by key")
  .action((value, keys) => {
    // value 可以取到 [value] 值，keys会获取到命令参数
    console.log(value, keys);
  });


// 解析用户执行时输入的参数
// process.argv 是 nodejs 提供的属性
// npm run server --port 3000
// 后面的 --port 3000 就是用户输入的参数
program.parse(process.argv);



/**
 * ora —— 命令行 loading 效果
 */
// const ora = require("ora");

// // 定义一个loading
// const spinner = ora("Loading unicorns");
// // 启动loading
// spinner.start();
// setTimeout(() => {
//   spinner.color = "yellow";
//   spinner.text = "Loading rainbows";
// }, 1000);

// // loading 成功
// spinner.succeed();
// // loading 失败
// spinner.fail();


/**
 * inquirer —— 命令行交互工具
 */
// const Inquirer = require("inquirer")
// new Inquirer.prompt([
//   {
//     name: "vue",
//     // 多选交互功能
//     // 单选将这里修改为 list 即可
//     type: "checkbox",
//     message: "Check the features needed for your project:",
//     choices: [
//       {
//         name: "Babel",
//         checked: true,
//       },
//       {
//         name: "TypeScript",
//       },
//       {
//         name: "Progressive Web App (PWA) Support",
//       },
//       {
//         name: "Router",
//       },
//     ],
//   },
// ]).then((data) => {
//   console.log(data);
// });
